@page
@model AppManager.Pages.Admin.ApplicationManagementModel
@using AppManager.Models
@{
    ViewData["Title"] = "Anwendungsverwaltung";
}

<!-- Ãœberschrift mit IIS-Status-Indikator -->
<h1>AppManger
    <!-- Zeigt den IIS-Status als Badge an -->
    @if (Model.IisAvailable)
    {
        <span class="badge bg-success ms-3">
            <!-- GrÃ¼nes Icon fÃ¼r verfÃ¼gbaren IIS -->
            <svg ...></svg>
            IIS VerfÃ¼gbar
        </span>
    }
    else if (!string.IsNullOrEmpty(Model.IisErrorMessage))
    {
        <span class="badge bg-warning text-dark ms-3">
            <!-- Gelbes Icon bei IIS-Problem -->
            <svg ...></svg>
            IIS Problem
        </span>
    }
    else
    {
        <span class="badge bg-secondary ms-3">
            <!-- Graues Icon bei unbekanntem Status -->
            <svg ...></svg>
            IIS Status unbekannt
        </span>
    }
</h1>

<!-- Erfolgsmeldung anzeigen, falls vorhanden -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<!-- Fehlermeldung anzeigen, falls vorhanden -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<!-- Detaillierte Erfolgsmeldung mit Icon und SchlieÃŸen-Button -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <svg ...></svg>
        <strong>Erfolgreich:</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Detaillierte Fehlermeldung mit Ursachen und LÃ¶sungsvorschlÃ¤gen -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <svg ...></svg>
        <strong>Fehler:</strong> @TempData["ErrorMessage"]
        
        <!-- ZusÃ¤tzliche Hinweise bei bestimmten Fehlern -->
        @if (TempData["ErrorMessage"].ToString().Contains("Objektkennung") || TempData["ErrorMessage"].ToString().Contains("0x800710D8"))
        {
            <hr class="my-2">
            <small class="d-block">
                <strong>ðŸ’¡ MÃ¶gliche Ursachen:</strong><br>
                <!-- MÃ¶gliche Fehlerursachen fÃ¼r Objektkennung -->
                â€¢ Der AppPool existiert nicht mehr im IIS<br>
                â€¢ IIS-Dienste (W3SVC/WAS) sind gestoppt<br>
                â€¢ Keine Administratorrechte fÃ¼r IIS-Operationen
            </small>
        }
        
        @if (TempData["ErrorMessage"].ToString().Contains("Der Dienst wurde nicht gestartet") || TempData["ErrorMessage"].ToString().Contains("0x80070426"))
        {
            <hr class="my-2">
            <small class="d-block">
                <strong>ðŸ”§ LÃ¶sungsvorschlag:</strong><br>
                <!-- LÃ¶sungsvorschlag fÃ¼r Dienst nicht gestartet -->
                IIS-Dienste neu starten: <code>iisreset</code> als Administrator ausfÃ¼hren
            </small>
        }
        
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Warnung bei IIS-Verbindungsproblemen mit LÃ¶sungsvorschlÃ¤gen -->
@if (!string.IsNullOrEmpty(Model.IisErrorMessage))
{
    <div class="alert alert-warning d-flex align-items-center" role="alert">
        <div class="flex-shrink-0">
            <svg ...></svg>
        </div>
        <div class="flex-grow-1 ms-3">
            <h6 class="alert-heading">IIS-Verbindungsproblem</h6>
            <p class="mb-2">@Model.IisErrorMessage</p>
            <!-- LÃ¶sungsvorschlÃ¤ge je nach Fehlertyp -->
            @if (Model.IisErrorMessage.Contains("Berechtigung") || Model.IisErrorMessage.Contains("Administrator"))
            {
                <div class="small">
                    <strong>ðŸ’¡ LÃ¶sungsvorschlÃ¤ge:</strong>
                    <ul class="mb-0 mt-1">
                        <!-- VorschlÃ¤ge bei Berechtigungsproblemen -->
                        <li>Starten Sie Visual Studio oder die Anwendung als Administrator</li>
                        <li>PrÃ¼fen Sie, ob IIS korrekt installiert ist</li>
                        <li>Kontaktieren Sie Ihren Systemadministrator fÃ¼r erweiterte Berechtigungen</li>
                    </ul>
                </div>
            }
            else if (Model.IisErrorMessage.Contains("redirection.config") || Model.IisErrorMessage.Contains("Konfiguration"))
            {
                <div class="small">
                    <strong>ðŸ’¡ LÃ¶sungsvorschlÃ¤ge:</strong>
                    <ul class="mb-0 mt-1">
                        <!-- VorschlÃ¤ge bei Konfigurationsproblemen -->
                        <li>IIS-Konfiguration Ã¼berprÃ¼fen: <code>inetmgr</code> als Administrator ausfÃ¼hren</li>
                        <li>IIS-Rolle in Windows Features prÃ¼fen</li>
                        <li>Anwendung mit erhÃ¶hten Rechten starten</li>
                    </ul>
                </div>
            }
            <hr class="my-2">
            <p class="mb-0 small">
                <em>Hinweis: Die Anwendungsverwaltung funktioniert weiterhin fÃ¼r normale Windows-Anwendungen.</em>
            </p>
        </div>
    </div>
}

<!-- Hinweis: Nur IIS-Anwendungen werden hier angezeigt und verwaltet. Windows-Apps verwalten Sie bitte im IIS Manager. -->
<div class="alert alert-info"> <a asp-page="/IISManager">IIS Manager</a>.</div>

<!-- Tabelle mit allen Anwendungen -->
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Status</th>
            <th>Letzter Start</th>
            <th>Aktionen</th>
            <th>Owner</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var app in Model.Applications)
        {
        <tr>
            <!-- Name und ggf. Owner-Badge -->
            <td style="width:45%">
                @app.Name
                @if (Model.CanManage(app.Id))
                {
                    <!-- Badge fÃ¼r Owner -->
                    <span class="badge bg-success ml-2">Du bist Owner</span>
                }
                <br />
                <small class="text-muted">@app.IISAppPoolName</small>
            </td>
            <!-- Statusanzeige (gestartet/gestoppt) -->
            <td style="width:10%">
                @if (app.IsStarted)
                {
                    <!-- Status: gestartet -->
                    <span class="text-success">Gestartet</span>
                }
                else
                {
                    <!-- Status: gestoppt -->
                    <span class="text-danger">Gestoppt</span>
                }
            </td>
            <!-- Zeitpunkt des letzten Starts -->
            <td style="width:15%">@app.LastLaunchTime.ToString("g")</td>
            <!-- Steuerungsaktionen: nur Link zum IIS Manager (Start/Stop/Recycle dort) -->
            <td style="width:20%">
                @if (app.IsIISApplication)
                {
                    <!-- Aktionen fÃ¼r IIS-Anwendungen -->
                    <div class="btn-group btn-group-sm" role="group">
                        <span class="badge bg-info me-2">IIS App</span>
                        <a asp-page="/IISManager" class="btn btn-primary btn-sm" title="Im IIS Manager verwalten">
                            ðŸš€ IIS Manager
                        </a>
                    </div>
                }
                else
                {
                    <!-- Nicht verwaltbare Anwendung -->
                    <span class="text-muted">Nicht verwaltbar</span>
                }
            </td>

            <!-- Owner-Zuweisung -->
            <td style="width:20%">
                <!-- Owner-Zuweisung nur fÃ¼r globale Admins -->
                @if (Model.CurrentUserIsGlobalAdmin)
                {
                    <!-- Formular zur Owner-Zuweisung -->
                    <form method="post" asp-page-handler="AddOwner" class="form-inline">
                        <input type="hidden" name="OwnerApplicationId" value="@app.Id" />
                        <select name="OwnerUserId" class="form-control form-control-sm mr-1">
                            <option value="">â€” wÃ¤hlen â€”</option>
                            @foreach (var u in Model.Users)
                            {
                                <option value="@u.Id">@u.Vorname @u.Nachname (@u.UserName)</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-outline-primary btn-sm">Assign</button>
                    </form>
                }
                <div class="mt-2">
                    <!-- Owner: zeigt zugewiesene Owner(s) Ã¼ber ApplicationOwners-Mapping -->
                    @{
                        Model.ApplicationOwners.TryGetValue(app.Id, out var ownerStr);
                    }
                    @if (!string.IsNullOrEmpty(ownerStr))
                    {
                        <small class="text-muted">@ownerStr</small>
                    }
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>
<!-- CPU charts entfernt -->